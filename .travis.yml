language: cpp

cache: ccache

os: 
  - linux
  - osx

env:
  - TEST_COMMAND="qmake PREFIX=/usr APPIMAGE=1 ../src && make -j4"
  - TEST_COMMAND="cmake ../src && make -j4"

sudo: required
dist: trusty

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update          ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo add-apt-repository ppa:beineri/opt-qt591-trusty -y &&  
      sudo apt-get update -qq  
    ; fi

install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew install p7zip ccache qt5 && 
      export PATH="/usr/local/opt/qt/bin:$PATH" 
    ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo apt-get -y install qt59base qt59webengine &&
      source /opt/qt5*/bin/qt5*-env.sh
    ; fi

after_success:
# TODO: include radare2/www for the webserver # Unless we remove the webserver ;)
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then  
      macdeployqt cutter.app -dmg &&
      export FILE_TO_UPLOAD="cutter.dmg"
    ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        sudo make INSTALL_ROOT=appdir install &&
        sudo chown -R $USER appdir &&
        cp -r /usr/share/radare2 appdir/usr/share/ &&
        wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage" &&
        chmod a+x linuxdeployqt*.AppImage &&
        unset QTDIR; unset QT_PLUGIN_PATH ; unset LD_LIBRARY_PATH &&
        ./linuxdeployqt*.AppImage ./appdir/usr/share/applications/*.desktop -bundle-non-qt-libs -verbose=2 &&
        ./linuxdeployqt*.AppImage ./appdir/usr/share/applications/*.desktop -appimage -verbose=2
        find ./appdir -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq &&
        export FILE_TO_UPLOAD="Cutter-x86_64.AppImage"
    ; fi

before_script:
  - git submodule init ; git submodule update
  - cd radare2
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        INSTALL_TARGET=install sys/install.sh;
    else
        LDFLAGS=-headerpad_max_install_names INSTALL_TARGET=install sys/install.sh;
    fi
  - cd ..

script:
  - mkdir build
  - cd build
  - (eval "$TEST_COMMAND")

deploy:
  skip_cleanup: true
  provider: releases
  api_key:
    secure: ZXuSX8JXyL0HlJvSIda3ftMkvYsrxoWDcWm2LxO+f0uNFghCHNnISuH/btdipn2mjCBaBQl6/1IK5cg/AZ5OSkiaVsJJqY8kkPsZvR8K+k4oarsr2ApetlLZiZWtydC3J+UyNhsgCt4iuYPsvusANFPZBpVmqT+A5CHS7aPIqP00awbkJYG1uOENe2XVZ0vyotBqU0E7A9f8UO5ps0+qysS8W+NDB+CGLgKLeBfCk3U+IYKGYXcv66xCmSSZ5f7IVIXEjG4voFHGp9XLRY2R/iJgiKQKDbu519vUB3iKPzmLTB/Q9bNz4VMZCREa4SHaLDen730fMHbfm6ZhGZDzXg1DgZoh6RHptWf0WjcHTr1ch8ajpnBMxh/qmoRpaS00FJQMraMT3Il38ekYd+hOhsP58Bj1Db2vjBKopGEHGmVyFQZKuynrdKmpmY+kRNUT3QerIsiAHwHV2QXnMARHYXJrM0T7LNACa2mhiwQD2vNIqLRieIbHbSWgDUrTVTDeII23AAHCzD0YxcCAjSExjun/rc9dJjevgCoBpTM/NHPLCW4big1myx+vRQGPNdlf+dI7igm6bPVWB7znp5uXlI8q5irvqTVtRSvKbcaeDWOz/ki7QgOzaxmGFtaw30hxeY0wFlnSMXc8m42udWLkp/l0b4L0hcoaMTc1TvVU0i4=
  file:
    - "${FILE_TO_UPLOAD}"
  on:
    repo: radareorg/cutter
